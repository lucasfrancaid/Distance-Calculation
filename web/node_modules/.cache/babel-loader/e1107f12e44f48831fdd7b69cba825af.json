{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\Lucas\\\\Desktop\\\\DistanceCalculation\\\\web\\\\src\\\\components\\\\DistanceForm\\\\index.js\";\nimport React, { useState } from 'react';\nimport usePlacesAutocomplete from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaWalking, FaCar, FaBicycle } from \"react-icons/fa\";\n\nfunction DistanceForm({\n  onSubmit\n}) {\n  const [origins, setOrigins] = useState('');\n  const [destinations, setDestinations] = useState('');\n  const [mode, setMode] = useState('');\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await onSubmit({\n      origins,\n      destinations,\n      mode\n    });\n    setOrigins('');\n    setDestinations('');\n    setMode('');\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"origins\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Origin\"), React.createElement(\"input\", {\n    name: \"origins\",\n    id: \"origins\",\n    placeholder: \"Enter your starting address\",\n    required: true,\n    value: origins,\n    onChange: e => setOrigins(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"destinations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Destiny\"), React.createElement(\"input\", {\n    name: \"destinations\",\n    id: \"destinations\",\n    placeholder: \"Enter your destination address\",\n    required: true,\n    value: destinations,\n    onChange: e => setDestinations(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: mode === \"walking\" ? \"btn-icon-active\" : \"btn-icon\",\n    name: \"walking\",\n    id: \"walking\",\n    value: \"walking\",\n    onClick: e => setMode(\"walking\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FaWalking, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: mode === \"driving\" ? \"btn-icon-active\" : \"btn-icon\",\n    name: \"driving\",\n    id: \"driving\",\n    value: \"driving\",\n    onClick: e => setMode(\"driving\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(FaCar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: mode === \"bicycling\" ? \"btn-icon-active\" : \"btn-icon\",\n    name: \"bicycling\",\n    id: \"bicycling\",\n    value: \"bicycling\",\n    onClick: e => setMode(\"bicycling\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(FaBicycle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Go\"));\n}\n\nconst PlacesAutocomplete = () => {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300\n  });\n  const registerRef = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = e => {\n    // Update the keyword of the input element\n    setValue(e.target.value);\n  };\n\n  const handleSelect = ({\n    description\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter as \"false\"\n    setValue(description, false);\n    clearSuggestions(); // Get latitude and longitude via utility functions\n\n    getGeocode({\n      address: description\n    }).then(results => getLatLng(results[0])).then(({\n      lat,\n      lng\n    }) => {\n      console.log('📍 Coordinates: ', {\n        lat,\n        lng\n      });\n    }).catch(error => {\n      console.log('😱 Error: ', error);\n    });\n  };\n\n  const renderSuggestions = () => data.map(suggestion => {\n    const {\n      id,\n      structured_formatting: {\n        main_text,\n        secondary_text\n      }\n    } = suggestion;\n    return React.createElement(\"li\", {\n      key: id,\n      onClick: handleSelect(suggestion),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, main_text), \" \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, secondary_text));\n  });\n\n  return React.createElement(\"div\", {\n    ref: registerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: value,\n    onChange: handleInput,\n    disabled: !ready,\n    placeholder: \"Where are you going?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), status === 'OK' && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, renderSuggestions()));\n};\n\nexport default DistanceForm;","map":{"version":3,"sources":["C:/users/Lucas/Desktop/DistanceCalculation/web/src/components/DistanceForm/index.js"],"names":["React","useState","usePlacesAutocomplete","useOnclickOutside","FaWalking","FaCar","FaBicycle","DistanceForm","onSubmit","origins","setOrigins","destinations","setDestinations","mode","setMode","handleSubmit","e","preventDefault","target","value","PlacesAutocomplete","ready","suggestions","status","data","setValue","clearSuggestions","requestOptions","debounce","registerRef","handleInput","handleSelect","description","getGeocode","address","then","results","getLatLng","lat","lng","console","log","catch","error","renderSuggestions","map","suggestion","id","structured_formatting","main_text","secondary_text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,SAA3B,QAA4C,gBAA5C;;AAEA,SAASC,YAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAsC;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAEA,iBAAec,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMT,QAAQ,CAAC;AACXC,MAAAA,OADW;AAEXE,MAAAA,YAFW;AAGXE,MAAAA;AAHW,KAAD,CAAd;AAMAH,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AAED,SACI;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,EAAE,EAAC,SAFP;AAGI,IAAA,WAAW,EAAC,6BAHhB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,KAAK,EAAEN,OALX;AAMI,IAAA,QAAQ,EAAEO,CAAC,IAAIN,UAAU,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAaI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AACI,IAAA,IAAI,EAAC,cADT;AAEI,IAAA,EAAE,EAAC,cAFP;AAGI,IAAA,WAAW,EAAC,gCAHhB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,KAAK,EAAER,YALX;AAMI,IAAA,QAAQ,EAAEK,CAAC,IAAIJ,eAAe,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAbJ,EAyBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEN,IAAI,KAAK,SAAT,GAAqB,iBAArB,GAAyC,UAA1E;AAAsF,IAAA,IAAI,EAAC,SAA3F;AAAqG,IAAA,EAAE,EAAC,SAAxG;AAAkH,IAAA,KAAK,EAAC,SAAxH;AAAkI,IAAA,OAAO,EAAEG,CAAC,IAAIF,OAAO,CAAC,SAAD,CAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApK,CADJ,EAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAED,IAAI,KAAK,SAAT,GAAqB,iBAArB,GAAyC,UAA1E;AAAsF,IAAA,IAAI,EAAC,SAA3F;AAAqG,IAAA,EAAE,EAAC,SAAxG;AAAkH,IAAA,KAAK,EAAC,SAAxH;AAAkI,IAAA,OAAO,EAAEG,CAAC,IAAIF,OAAO,CAAC,SAAD,CAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoK,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApK,CAFJ,EAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAED,IAAI,KAAK,WAAT,GAAuB,iBAAvB,GAA2C,UAA5E;AAAwF,IAAA,IAAI,EAAC,WAA7F;AAAyG,IAAA,EAAE,EAAC,WAA5G;AAAwH,IAAA,KAAK,EAAC,WAA9H;AAA0I,IAAA,OAAO,EAAEG,CAAC,IAAIF,OAAO,CAAC,WAAD,CAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8K,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9K,CAHJ,CADD,CAzBJ,EAiCI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjCJ,CADJ;AAqCH;;AAED,MAAMM,kBAAkB,GAAG,MAAM;AAC/B,QAAM;AACJC,IAAAA,KADI;AAEJF,IAAAA,KAFI;AAGJG,IAAAA,WAAW,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAHT;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAMFxB,qBAAqB,CAAC;AACxByB,IAAAA,cAAc,EAAE;AAAE;AAAF,KADQ;AAExBC,IAAAA,QAAQ,EAAE;AAFc,GAAD,CANzB;AAUA,QAAMC,WAAW,GAAG1B,iBAAiB,CAAC,MAAM;AAC1C;AACA;AACAuB,IAAAA,gBAAgB;AACjB,GAJoC,CAArC;;AAMA,QAAMI,WAAW,GAAGd,CAAC,IAAI;AACvB;AACAS,IAAAA,QAAQ,CAACT,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACD,GAHD;;AAKA,QAAMY,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAqB,MAAM;AAC9C;AACA;AACAP,IAAAA,QAAQ,CAACO,WAAD,EAAc,KAAd,CAAR;AACAN,IAAAA,gBAAgB,GAJ8B,CAM9C;;AACAO,IAAAA,UAAU,CAAC;AAAEC,MAAAA,OAAO,EAAEF;AAAX,KAAD,CAAV,CACGG,IADH,CACQC,OAAO,IAAIC,SAAS,CAACD,OAAO,CAAC,CAAD,CAAR,CAD5B,EAEGD,IAFH,CAEQ,CAAC;AAAEG,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,KAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC;AAAEH,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAhC;AACD,KAJH,EAIKG,KAJL,CAIWC,KAAK,IAAI;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,KAA1B;AACD,KANH;AAOD,GAdD;;AAgBA,QAAMC,iBAAiB,GAAG,MACxBpB,IAAI,CAACqB,GAAL,CAASC,UAAU,IAAI;AACrB,UAAM;AACJC,MAAAA,EADI;AAEJC,MAAAA,qBAAqB,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA;AAAb;AAFnB,QAGFJ,UAHJ;AAKA,WACE;AACE,MAAA,GAAG,EAAEC,EADP;AAEE,MAAA,OAAO,EAAEhB,YAAY,CAACe,UAAD,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASG,SAAT,CAJF,OAI+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQC,cAAR,CAJ/B,CADF;AAQD,GAdD,CADF;;AAiBA,SACE;AAAK,IAAA,GAAG,EAAErB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAEV,KADT;AAEE,IAAA,QAAQ,EAAEW,WAFZ;AAGE,IAAA,QAAQ,EAAE,CAACT,KAHb;AAIE,IAAA,WAAW,EAAC,sBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGE,MAAM,KAAK,IAAX,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKqB,iBAAiB,EAAtB,CARtB,CADF;AAYD,CAnED;;AAsEA,eAAerC,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport usePlacesAutocomplete from 'use-places-autocomplete';\r\nimport useOnclickOutside from 'react-cool-onclickoutside';\r\nimport { FaWalking, FaCar, FaBicycle } from \"react-icons/fa\";\r\n\r\nfunction DistanceForm( { onSubmit } ) {\r\n    const [origins, setOrigins] = useState('')\r\n    const [destinations, setDestinations] = useState('')\r\n    const [mode, setMode] = useState('')\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        await onSubmit({\r\n            origins,\r\n            destinations,\r\n            mode,\r\n        })\r\n\r\n        setOrigins('')\r\n        setDestinations('')\r\n        setMode('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"origins\">Origin</label>\r\n                <input\r\n                    name=\"origins\"\r\n                    id=\"origins\"\r\n                    placeholder=\"Enter your starting address\"\r\n                    required\r\n                    value={origins}\r\n                    onChange={e => setOrigins(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"destinations\">Destiny</label>\r\n                <input\r\n                    name=\"destinations\"\r\n                    id=\"destinations\"\r\n                    placeholder=\"Enter your destination address\"\r\n                    required\r\n                    value={destinations}\r\n                    onChange={e => setDestinations(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n             <ul>\r\n                 <button type=\"button\" className={mode === \"walking\" ? \"btn-icon-active\" : \"btn-icon\"} name=\"walking\" id=\"walking\" value=\"walking\" onClick={e => setMode(\"walking\")}><FaWalking/></button>\r\n                 <button type=\"button\" className={mode === \"driving\" ? \"btn-icon-active\" : \"btn-icon\"} name=\"driving\" id=\"driving\" value=\"driving\" onClick={e => setMode(\"driving\")}><FaCar/></button>\r\n                 <button type=\"button\" className={mode === \"bicycling\" ? \"btn-icon-active\" : \"btn-icon\"} name=\"bicycling\" id=\"bicycling\" value=\"bicycling\" onClick={e => setMode(\"bicycling\")}><FaBicycle/></button>\r\n             </ul>\r\n            </div>\r\n\r\n            <button type=\"submit\">Go</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PlacesAutocomplete = () => {\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: { /* Define search scope here */ },\r\n    debounce: 300\r\n  });\r\n  const registerRef = useOnclickOutside(() => {\r\n    // When user clicks outside of the component, we can dismiss\r\n    // the searched suggestions by calling this method\r\n    clearSuggestions();\r\n  });\r\n\r\n  const handleInput = e => {\r\n    // Update the keyword of the input element\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = ({ description }) => () => {\r\n    // When user selects a place, we can replace the keyword without request data from API\r\n    // by setting the second parameter as \"false\"\r\n    setValue(description, false);\r\n    clearSuggestions();\r\n\r\n    // Get latitude and longitude via utility functions\r\n    getGeocode({ address: description })\r\n      .then(results => getLatLng(results[0]))\r\n      .then(({ lat, lng }) => {\r\n        console.log('📍 Coordinates: ', { lat, lng });\r\n      }).catch(error => {\r\n        console.log('😱 Error: ', error)\r\n      });\r\n  };\r\n\r\n  const renderSuggestions = () =>\r\n    data.map(suggestion => {\r\n      const {\r\n        id,\r\n        structured_formatting: { main_text, secondary_text }\r\n      } = suggestion;\r\n\r\n      return (\r\n        <li\r\n          key={id}\r\n          onClick={handleSelect(suggestion)}\r\n        >\r\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div ref={registerRef}>\r\n      <input\r\n        value={value}\r\n        onChange={handleInput}\r\n        disabled={!ready}\r\n        placeholder=\"Where are you going?\"\r\n      />\r\n      {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\r\n      {status === 'OK' && <ul>{renderSuggestions()}</ul>}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DistanceForm;"]},"metadata":{},"sourceType":"module"}