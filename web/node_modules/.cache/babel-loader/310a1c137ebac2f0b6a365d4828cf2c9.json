{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\lucas\\\\desktop\\\\lucas\\\\dev\\\\projects\\\\DistanceCalculation\\\\web\\\\src\\\\components\\\\DistanceResult\\\\index.js\";\nimport React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './styles.css';\nimport './marker.css';\n\nconst DistanceResult = ({\n  distance,\n  duration\n}) => {\n  if (distance) {\n    return React.createElement(\"ul\", {\n      className: \"distance-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"distance-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"The distance is \", distance, \" and the journey takes \", duration, \". \")))));\n  } else {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" \");\n  }\n};\n\nconst zoomDefined = distance => {\n  let distanceInt = distance.replace(',', '');\n  distanceInt = parseInt(distanceInt, 10);\n  if (distanceInt <= 10) return 13;\n  if (distanceInt > 10 && distanceInt <= 20) return 12;\n  if (distanceInt > 20 && distanceInt <= 50) return 11;\n  if (distanceInt > 50 && distanceInt <= 100) return 10;\n  if (distanceInt > 100 && distanceInt <= 200) return 9;\n  if (distanceInt > 200 && distanceInt <= 450) return 8;\n  if (distanceInt > 450 && distanceInt <= 800) return 7;\n  if (distanceInt > 800 && distanceInt <= 2000) return 6;\n  if (distanceInt > 2000 && distanceInt <= 4000) return 5;\n  if (distanceInt > 4000 && distanceInt <= 7500) return 4;\n  if (distanceInt > 7500) return 3;\n}; //function centerDefined(origins, destinations) {\n\n\nconst centerDefined = (origins, destinations) => {\n  let center = {\n    lat: (origins.lat + destinations.lat) / 2,\n    lng: (origins.lng + destinations.lng) / 2\n  };\n  return center;\n};\n\nconst Map = ({\n  distance,\n  origins,\n  destinations\n}) => {\n  let center = centerDefined(origins, destinations);\n  let zoom = zoomDefined(distance);\n\n  if (zoom && center && origins && destinations) {\n    return React.createElement(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyB4ydoMyIkLCRLypbv9cbQ5ntIJEKDp9mA'\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      lat: origins.lat,\n      lng: origins.lng,\n      text: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      lat: destinations.lat,\n      lng: destinations.lng,\n      text: \"B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \");\n  }\n};\n\nconst Marker = ({\n  text\n}) => {\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"pin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"pulse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, text));\n};\n\nexport { Map, DistanceResult };","map":{"version":3,"sources":["C:/users/lucas/desktop/lucas/dev/projects/DistanceCalculation/web/src/components/DistanceResult/index.js"],"names":["React","GoogleMapReact","DistanceResult","distance","duration","zoomDefined","distanceInt","replace","parseInt","centerDefined","origins","destinations","center","lat","lng","Map","zoom","height","width","key","Marker","text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport './styles.css';\r\nimport './marker.css';\r\n\r\nconst DistanceResult = ({ distance, duration }) => {\r\n  if (distance) {\r\n    return (\r\n        <ul className=\"distance-item\">\r\n        <header>\r\n          <div className=\"distance-info\">\r\n            <strong>\r\n              <p>The distance is {distance} and the journey takes {duration}. </p>\r\n            </strong>\r\n          </div>\r\n        </header>\r\n      </ul>\r\n    )\r\n} else {\r\n  return(\r\n    <h1> </h1>\r\n  )}\r\n};\r\n\r\nconst zoomDefined = (distance) => {\r\n  let distanceInt = distance.replace(',', '')\r\n  distanceInt = parseInt(distanceInt, 10)\r\n \r\n  if (distanceInt <= 10) return 13\r\n  if (distanceInt > 10 && distanceInt <= 20) return 12\r\n  if (distanceInt > 20 && distanceInt <= 50) return 11\r\n  if (distanceInt > 50 && distanceInt <= 100) return 10\r\n  if (distanceInt > 100 && distanceInt <= 200) return 9\r\n  if (distanceInt > 200 && distanceInt <= 450) return 8\r\n  if (distanceInt > 450 && distanceInt <= 800) return 7\r\n  if (distanceInt > 800 && distanceInt <= 2000) return 6\r\n  if (distanceInt > 2000 && distanceInt <= 4000) return 5\r\n  if (distanceInt > 4000 && distanceInt <= 7500) return 4\r\n  if (distanceInt > 7500) return 3\r\n}\r\n\r\n//function centerDefined(origins, destinations) {\r\nconst centerDefined = (origins, destinations) => {\r\n  let center = { \r\n    lat: (origins.lat + destinations.lat) / 2, \r\n    lng: (origins.lng + destinations.lng) / 2 \r\n  }\r\n  return center\r\n}\r\n\r\nconst Map = ({ distance, origins, destinations }) => {\r\n  \r\n  let center = centerDefined(origins, destinations)\r\n  let zoom = zoomDefined(distance)\r\n\r\n  if ((zoom && center) && origins && destinations) {\r\n    return(\r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={ { key: 'AIzaSyB4ydoMyIkLCRLypbv9cbQ5ntIJEKDp9mA' } }\r\n        defaultCenter={center}\r\n        defaultZoom={zoom}\r\n      >\r\n        <Marker lat={origins.lat} lng={origins.lng} text=\"A\" />\r\n        <Marker lat={destinations.lat} lng={destinations.lng} text=\"B\" />\r\n      </GoogleMapReact>\r\n    </div>\r\n    )\r\n  } else {\r\n    return(\r\n      <h1> </h1>\r\n  )}\r\n}\r\n\r\nconst Marker = ({text}) => {\r\n  return <>\r\n    <div className=\"pin\"></div>\r\n    <div className=\"pulse\"></div>\r\n      <div className=\"text\">{text}</div>\r\n  </>\r\n}\r\n\r\nexport {Map, DistanceResult};"]},"metadata":{},"sourceType":"module"}